범용 레지스터는 주용도는 있으나, 그 외의 다양한 용도로 사용될 수 있는 레지스터입니다. 

rax (accumulator register) 함수의 반환 값

rbx (base register) x64에서는 주된 용도 없음

rcx (counter register) 반복문의 반복 횟수, 각종 연산의 시행 횟수

rdx (data register) x64에서는 주된 용도 없음

rsi (source index) 데이터를 옮길 때 원본을 가리키는 포인터

rdi (destination index) 데이터를 옮길 때 목적지를 가리키는 포인터

rsp (stack pointer) 사용중인 스택의 위치를 가리키는 포인터

rbp (stack base pointer) 스택의 바닥을 가리키는 포인터

--------------------------------------------------------------------------------------------

cs, ss, ds, es, fs, gs 총 6가지 세그먼트 레지스터가 존재하며, 각 레지스터의 크기는 16비트입니다. 

cs, ds, ss 레지스터는 코드 영역과 데이터, 스택 메모리 영역을 가리킬 때 사용되고,
나머지 레지스터는 운영체제 별로 용도를 결정할 수 있도록 범용적인 용도로 제작된 세그먼트 레지스터입니다.

----------------------------------------------------------------------------------------------

CPU가 어느 부분의 코드를 실행할지 가리키는게 명령어 포인터 레지스터의 역할입니다.
x64 아키텍처의 명령어 레지스터는 rip이며, 크기는 8바이트입니다.

-----------------------------------------------------------------------------------------------

플래그 레지스터는 프로세서의 현재 상태를 저장하고 있는 레지스터입니다.
RFLAGS는 64비트이므로 최대 64개의 플래그를 사용할 수 있지만, 실제로는 20여개의 비트만 사용합니다.

CF(Carry Flag) 부호 없는 수의 연산 결과가 비트의 범위를 넘을 경우 설정 됩니다.

ZF(Zero Flag) 연산의 결과가 0일 경우 설정 됩니다.

SF(Sign Flag) 연산의 결과가 음수일 경우 설정 됩니다.

OF(Overflow Flag) 부호 있는 수의 연산 결과가 비트 범위를 넘을 경우 설정 됩니다.

-------------------------------------------------------------------------------------------------

x86-64 아키텍처는 IA-32의 64비트 확장 아키텍처이며, 호환이 가능하다고 했습니다.
IA-32에서 CPU의 레지스터들은 32비트 크기를 가지며, 이들의 명칭은 각각 eax, ebx, ecx, edx, esi, edi, esp, ebp였습니다.
호환성을 위해 이 레지스터들은 x86-64에서도 그대로 사용이 가능합니다.

rax 의 하위 32비트(eax) eax의 하위 16비트(ax) ax의 상위 8비트 ah 하위 8비트 al
rbx 의 하위 32비트(ebx) ebx의 하위 16비트(bx) bx의 상위 8비트 bh 하위 8비트 bl
rcx 의 하위 32비트(ecx) ecx의 하위 16비트(cx) cx의 상위 8비트 ch 하위 8비트 cl
rdx 의 하위 32비트(edx) edx의 하위 16비트(dx) dx의 상위 8비트 dh 하위 8비트 dl

rsi 의 하위 32비트(esi) esi의 하위 16비트(si)
rdi 의 하위 32비트(edi) esi의 하위 16비트(di)
rsp 의 하위 32비트(esp) esi의 하위 16비트(sp)
rbp 의 하위 32비트(ebp) esi의 하위 16비트(bp)


